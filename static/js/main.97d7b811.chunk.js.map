{"version":3,"sources":["app/localStorage.js","app/appSlice.js","hooks/useDaysjsRelativeTime.js","features/posts/Posts.js","features/posts/styles.js","features/allPosts/AllPosts.js","features/allPosts/styles.js","features/main/Main.js","features/main/styles.js","App.js","styles.js","app/store.js","serviceWorker.js","index.js"],"names":["loadState","serializedState","localStorage","getItem","JSON","parse","err","fetchTop","createAsyncThunk","a","after","undefined","axios","get","data","appSlice","createSlice","name","initialState","readingPost","allPosts","pagination","limit","reducers","dismiss","state","action","remove","post","id","payload","dismissAll","read","map","set","find","changePost","direction","forEach","index","newIndex","extraReducers","fulfilled","children","actions","load","loadMore","dayjs","extend","relativeTime","utc","useStyles","makeStyles","theme","root","minWidth","margin","subtitle","display","flexDirection","title","flexGrow","rowContent","alignItems","justifyContent","cursor","marginLeft","media","height","skeleton","Post","visited","author","num_comments","thumbnail","created_utc","classes","dispatch","useDispatch","getRelativeTime","fromNow","useState","show","setShow","onRead","Slide","in","mountOnEnter","unmountOnExit","Card","className","variant","CardHeader","subheader","color","style","fontSize","titleTypographyProps","align","subheaderTypographyProps","onClick","Grid","container","item","xs","CardMedia","image","CardContent","Typography","gutterBottom","IconButton","aria-label","CardActions","Button","setTimeout","button","startIcon","Chip","label","list","paddingTop","progress","marginTop","AllPosts","useSelector","app","useEffect","CircularProgress","List","key","modalImage","maxWidth","Main","open","setOpen","onChangePost","CardActionArea","component","size","Dialog","onClose","aria-labelledby","alt","src","drawer","width","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","top","position","backgroundColor","padding","borderBottom","zIndex","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","bottom","borderTop","content","spacing","menuButton","marginRight","hide","contentShift","PersistentDrawerLeft","matches","useMediaQuery","landscape","CssBaseline","AppBar","clsx","Toolbar","edge","noWrap","removeItem","window","location","reload","Drawer","anchor","paper","Divider","store","configureStore","reducer","appReducer","subscribe","stringify","setItem","saveState","getState","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.97d7b811.chunk.js","sourcesContent":["export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(\"state\");\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state) => {\n  const serializedState = JSON.stringify(state);\n  localStorage.setItem(\"state\", serializedState);\n};\n\nexport const cleanState = (state) => {\n  localStorage.removeItem(\"state\");\n};\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport set from \"lodash/set\";\r\nimport remove from \"lodash/remove\";\r\nimport { loadState } from \"./localStorage\";\r\nimport axios from \"axios\";\r\n\r\nexport const fetchTop = createAsyncThunk(\r\n  \"app/fetchTop\",\r\n  async (after = undefined) => {\r\n    const { data } = await axios.get(\r\n      `https://www.reddit.com/top.json?limit=25&after=${after}`\r\n    );\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const appSlice = createSlice({\r\n  name: \"app\",\r\n  initialState: loadState()\r\n    ? { ...loadState() }\r\n    : {\r\n        readingPost: undefined,\r\n        allPosts: undefined,\r\n        pagination: { limit: 25, after: undefined },\r\n      },\r\n  reducers: {\r\n    dismiss(state, action) {\r\n      state.allPosts = remove(\r\n        state.allPosts,\r\n        (post) => post.data.id !== action.payload.id\r\n      );\r\n    },\r\n    dismissAll(state) {\r\n      state.allPosts = [];\r\n    },\r\n    read(state, action) {\r\n      state.allPosts.map((post) =>\r\n        post.data.id === action.payload.id\r\n          ? set(post, \"data.visited\", true)\r\n          : post\r\n      );\r\n      state.readingPost = state.allPosts.find(\r\n        (post) => post.data.id === action.payload.id\r\n      ).data;\r\n    },\r\n    changePost(state, action) {\r\n      const direction = action.payload.direction === \"next\" ? 1 : -1;\r\n      state.allPosts.forEach((post, index) => {\r\n        if (post.data.id === action.payload.id) {\r\n          const newIndex = state.allPosts[index + direction];\r\n\r\n          const readingPost = newIndex ? newIndex.data : post.data;\r\n          state.readingPost = readingPost;\r\n          state.allPosts.map((post) =>\r\n            post.data.id === readingPost.id\r\n              ? set(post, \"data.visited\", true)\r\n              : post\r\n          );\r\n        }\r\n      });\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [fetchTop.fulfilled]: (state, action) => {\r\n      state.allPosts = action.payload.data.children;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  read,\r\n  dismiss,\r\n  dismissAll,\r\n  load,\r\n  changePost,\r\n  loadMore,\r\n} = appSlice.actions;\r\n\r\nexport default appSlice.reducer;\r\n","import dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport utc from \"dayjs/plugin/utc\";\n\ndayjs.extend(relativeTime);\ndayjs.extend(utc);\n\nexport default function useDaysjsRelativeTime() {\n  const getRelativeTime = (utc) => dayjs(utc * 1000).fromNow();\n\n  return getRelativeTime;\n}\n","import React, { useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Slide from \"@material-ui/core/Slide\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Chip from \"@material-ui/core/Chip\";\n// import Slide from \"@material-ui/core/Slide\";\nimport Button from \"@material-ui/core/Button\";\nimport FiberNewIcon from \"@material-ui/icons/FiberNew\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport { useDispatch } from \"react-redux\";\nimport { dismiss, read } from \"app/appSlice\";\nimport makeStyles from \"./styles\";\nimport { useDaysjsRelativeTime } from \"hooks\";\n\nconst useStyles = makeStyles();\n\nexport default function Post({\n  id,\n  visited,\n  title,\n  author,\n  num_comments,\n  thumbnail,\n  created_utc,\n}) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const getRelativeTime = useDaysjsRelativeTime();\n  const [show, setShow] = useState(true);\n\n  const onDismiss = () => {\n    setShow(false);\n    setTimeout(function () {\n      dispatch(dismiss({ id }));\n    }, 1000);\n  };\n  const onRead = () => dispatch(read({ id }));\n\n  return (\n    <Slide direction=\"left\" in={show} mountOnEnter unmountOnExit>\n      <Card className={classes.root} variant=\"outlined\">\n        <CardHeader\n          title={author}\n          subheader={\n            <span className={classes.subtitle}>\n              {getRelativeTime(created_utc)}\n              {!visited && (\n                <FiberNewIcon color=\"secondary\" style={{ fontSize: 25 }} />\n              )}\n            </span>\n          }\n          titleTypographyProps={{ variant: \"h6\", align: \"left\" }}\n          subheaderTypographyProps={{ align: \"left\" }}\n        />\n        <div className={classes.rowContent} onClick={onRead}>\n          <Grid container alignItems=\"center\">\n            {thumbnail !== \"\" && (\n              <Grid item xs={3}>\n                <CardMedia\n                  className={classes.media}\n                  image={thumbnail}\n                  title={title}\n                />\n              </Grid>\n            )}\n            <Grid item xs={7}>\n              <CardContent className={classes.title}>\n                <Typography color=\"textSecondary\" gutterBottom>\n                  {title}\n                </Typography>\n              </CardContent>\n            </Grid>\n            <Grid item xs={2}>\n              <IconButton aria-label=\"goto\" onClick={onRead}>\n                <ChevronRightIcon />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </div>\n        <CardActions className={classes.actions}>\n          <Button\n            onClick={onDismiss}\n            variant=\"outlined\"\n            color=\"secondary\"\n            className={classes.button}\n            startIcon={<HighlightOffIcon />}\n          >\n            Dismiss post\n          </Button>\n          <Chip label={`${num_comments} comments`} />\n        </CardActions>\n      </Card>\n    </Slide>\n  );\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default (theme) =>\n  makeStyles((theme) => ({\n    root: {\n      minWidth: 275,\n      margin: 10,\n    },\n    subtitle: {\n      display: \"flex\",\n      flexDirection: \"row\",\n    },\n    title: {\n      flexGrow: 1,\n    },\n    rowContent: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"space-around\",\n      cursor: \"pointer\",\n      marginLeft: 16,\n    },\n    media: {\n      height: \"6rem\",\n    },\n    actions: {\n      justifyContent: \"space-between\",\n    },\n    skeleton: {\n      margin: 10,\n    },\n  }));\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Slide from \"@material-ui/core/Slide\";\nimport makeStyles from \"./styles\";\nimport List from \"@material-ui/core/List\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Post from \"features/posts/Posts.js\";\nimport { fetchTop } from \"app/appSlice\";\n\nconst useStyles = makeStyles();\n\nfunction AllPosts() {\n  const classes = useStyles();\n  const allPosts = useSelector((state) => state.app.allPosts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchTop());\n  }, [dispatch]);\n\n  return (\n    <>\n      {!allPosts && (\n        <div className={classes.progress}>\n          <CircularProgress />\n        </div>\n      )}\n      {allPosts && (\n        <Slide direction=\"right\" in={true}>\n          <List className={classes.list}>\n            {allPosts &&\n              allPosts.map((post) => (\n                <Post key={post.data.id} {...post.data} />\n              ))}\n          </List>\n        </Slide>\n      )}\n    </>\n  );\n}\n\nexport default AllPosts;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default (theme) =>\n  makeStyles((theme) => ({\n    list: {\n      paddingTop: 80,\n    },\n    progress: {\n      marginTop: \"100%\",\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n    },\n  }));\n","import React, { useState } from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { changePost } from \"app/appSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport makeStyles from \"./styles\";\n\nconst useStyles = makeStyles();\n\nexport default function Main() {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const dispatch = useDispatch();\n  const readingPost = useSelector((state) => state.app.readingPost);\n  if (readingPost === undefined) {\n    return <></>;\n  }\n\n  const { title, thumbnail, id, author } = readingPost;\n  const onChangePost = (direction) => dispatch(changePost({ direction, id }));\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardHeader title={author} />\n        <CardActionArea>\n          {thumbnail !== \"\" && (\n            <CardMedia\n              onClick={() => setOpen(true)}\n              className={classes.media}\n              image={thumbnail}\n              title={title}\n            />\n          )}\n          <CardContent>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {title}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions className={classes.actions}>\n          <Button\n            variant=\"outlined\"\n            onClick={() => onChangePost(\"prev\")}\n            size=\"small\"\n          >\n            Read Previous\n          </Button>\n          <Button\n            variant=\"outlined\"\n            onClick={() => onChangePost(\"next\")}\n            size=\"small\"\n          >\n            Read Next\n          </Button>\n        </CardActions>\n      </Card>\n\n      {thumbnail !== \"\" && (\n        <Dialog\n          onClose={() => setOpen(false)}\n          aria-labelledby=\"simple-dialog-title\"\n          open={open}\n        >\n          <img alt=\"modal\" className={classes.modalImage} src={thumbnail} />\n        </Dialog>\n      )}\n    </>\n  );\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default (theme) =>\n  makeStyles((theme) => ({\n    modalImage: {\n      height: 1200,\n    },\n    root: {\n      maxWidth: \"35%\",\n      margin: \"0 auto\",\n      marginTop: 100,\n    },\n    media: {\n      height: 300,\n    },\n    actions: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n    },\n  }));\n","import React, { useState, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport makeStyles from \"./styles\";\r\nimport { cleanState } from \"app/localStorage\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport AllPosts from \"./features/allPosts/AllPosts.js\";\r\nimport { dismissAll } from \"./app/appSlice\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Main from \"./features/main/Main.js\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nconst useStyles = makeStyles();\r\n\r\nexport default function PersistentDrawerLeft() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const matches = useMediaQuery(\"(min-width:1280px)\");\r\n  const landscape = useMediaQuery(\"(orientation: landscape)\");\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setOpen(landscape || matches);\r\n  }, [landscape, matches]);\r\n\r\n  const onDismissAll = () => {\r\n    dispatch(dismissAll());\r\n  };\r\n\r\n  const onCleanState = () => {\r\n    cleanState();\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={() => setOpen(true)}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap className={classes.title}>\r\n            Deviget\r\n          </Typography>\r\n          <Button color=\"secondary\" onClick={onCleanState} variant=\"contained\">\r\n            Clean App state-preservation\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <Typography component=\"h5\" variant=\"h5\">\r\n            Reddit Posts\r\n          </Typography>\r\n          <IconButton onClick={() => setOpen(false)}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <AllPosts />\r\n        <div className={classes.dismissAll}>\r\n          <Button color=\"secondary\" onClick={onDismissAll}>\r\n            Dismiss All\r\n          </Button>\r\n        </div>\r\n      </Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n        <Main />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst drawerWidth = 350;\n\nexport default (theme) =>\n  makeStyles((theme) => ({\n    root: {\n      display: \"flex\",\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerHeader: {\n      ...theme.mixins.toolbar,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      top: 0,\n      position: \"fixed\",\n      backgroundColor: \"white\",\n      padding: \"1rem\",\n      width: drawerWidth,\n      borderBottom: \"1px solid grey\",\n      zIndex: 1,\n    },\n    appBar: {\n      transition: theme.transitions.create([\"margin\", \"width\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create([\"margin\", \"width\"], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    dismissAll: {\n      bottom: 0,\n      display: \"flex\",\n      position: \"fixed\",\n      justifyContent: \"center\",\n      backgroundColor: \"white\",\n      padding: \"1rem\",\n      width: drawerWidth,\n      borderTop: \"1px solid grey\",\n    },\n    loadMore: {\n      bottom: 0,\n      display: \"flex\",\n      justifyContent: \"center\",\n      backgroundColor: \"white\",\n      padding: \"1rem\",\n      width: \"100%\",\n      borderTop: \"1px solid grey\",\n    },\n\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create(\"margin\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: -drawerWidth,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    hide: {\n      display: \"none\",\n    },\n    title: {\n      flexGrow: 1,\n    },\n    contentShift: {\n      transition: theme.transitions.create(\"margin\", {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    },\n  }));\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport appReducer from \"./appSlice\";\r\nimport { saveState } from \"./localStorage\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    app: appReducer,\r\n  },\r\n});\r\n\r\nstore.subscribe(() => saveState(store.getState().app));\r\n\r\nexport default store;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}